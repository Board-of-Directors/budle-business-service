eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=${HOST}
eureka.client.serviceUrl.defaultZone=${SPRING_DISCOVERY_DEFAULT_ZONE:http://localhost:8181/eureka}
spring.application.name=business-service
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:8000/business_service}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:xzq75757}
server.port=8080
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.driver-class-name=org.postgresql.Driver


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=budleforbusiness@gmail.com
spring.mail.password=budletopstartup
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


logging.pattern.level= "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
management.zipkin.tracing.endpoint=${SPRING_ZIPKIN_ENDPOINT:http://localhost:9411/api/v2/spans}
management.tracing.sampling.probability=1.0

spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.serialization.fail-on-empty-beans=false

spring.kafka.bootstrap-servers=${SPRING_KAFKA_HOST:localhost:29092}
spring.kafka.consumer.group-id=orderId
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=changed:ru.nsu.fit.directors.businessservice.event.OrderStatusChangedEvent,business-message:ru.nsu.fit.directors.businessservice.event.BusinessMessageEvent
spring.kafka.template.default-topic=orderTopic

spring.kafka.consumer.bootstrap-servers=${SPRING_KAFKA_HOST:localhost:29092}
spring.kafka.producer.bootstrap-servers=${SPRING_KAFKA_HOST:localhost:29092}

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=business-notification:ru.nsu.fit.directors.businessservice.dto.BusinessOrderNotificationEvent,user-message:ru.nsu.fit.directors.businessservice.event.UserMessageEvent,business-message:ru.nsu.fit.directors.businessservice.event.BusinessMessageEvent
spring.kafka.consumer.properties.spring.json.trusted.packages=*


springdoc.swagger-ui.path=/business/swagger-ui.html
springdoc.api-docs.path=/business/api-docs

server.servlet.session.cookie.same-site=none
server.servlet.session.cookie.http-only=false
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.name=JSESSIONID_${spring.application.name}

security.jwt.secret=${JWT_SECRET:secret}
security.jwt.regular.access-token-validity-seconds=${JWT_ACCESS_TOKEN_SEC:3000}
security.jwt.regular.refresh-token-validity-days=${JWT_REFRESH_TOKEN_DAYS:14}
security.jwt.header-alg=HS256

security.jwt.key-claims.user-id=${JWT_KEY_USER_ID:userID}
security.jwt.key-claims.user-role=${JWT_KEY_USER_ROLE:role}
security.jwt.key-claims.session-id=${JWT_KEY_SESSION_ID:sessionID}
